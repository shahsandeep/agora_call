plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"

    id("com.google.gms.google-services")
}

android {
    namespace = "com.example.agora_call"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

      compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }
        kotlin {
        jvmToolchain(17)
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.agora_call"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = 1
        versionName = "1.0.0"
    }

    buildTypes {
        release {
              release {
            // add the following two lines
            minifyEnabled false
            shrinkResources false
        }
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
        packagingOptions {
      // Exclude AI denoise extension for the armeabi-v7a architecture
      exclude 'lib/armeabi-v7a/libagora_ai_denoise_extension.so'
      // Exclude AI denoise extension for the arm64-v8a architecture
      exclude 'lib/arm64-v8a/libagora_ai_denoise_extension.so'
      // Exclude spatial audio extension for the armeabi-v7a architecture
      exclude 'lib/armeabi-v7a/libagora_spatial_audio_extension.so'
      // Exclude spatial audio extension for the arm64-v8a architecture
      exclude 'lib/arm64-v8a/libagora_spatial_audio_extension.so'
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation(platform("com.google.firebase:firebase-bom:33.10.0"))
}
